" =============================================================================
" IdeaVim Configuration - Organized by Functionality
" =============================================================================

" Source default vimrc
source ~/.vimrc

" =============================================================================
" Basic Settings
" =============================================================================
set scrolloff=5
set incsearch
set ignorecase
set smartcase
set multiple-cursors  " <A-n>, <A-x>, <A-p>
set clipboard+=unnamed
set clipboard+=ideaput
"set clipboard+=unnamed
set ideajoin
set ideaput
set relativenumber
set number
" ysiw"    " Surround inner word with quotes: word â†’ "word"
" ysip}    " Surround inner paragraph with braces
" yss"     " Surround entire line with quotes
set surround " Enable surround text objects (ys, cs, ds)
set highlightedyank
set idearefactormode=keep
set showmode
set NERDTree
" yiw         " First, yank a word (copies to register)
" griw        " Replace current word with yanked content
" grr         " Replace entire line with yanked content
" gr$         " Replace from cursor to end of line
" kgrip        " Replace inner paragraph with yanked content
" kgr2j        " Replace current line and 2 lines below
set ReplaceWithRegister
" gcc     " Toggle comment on current line
" gc2j    " Comment current line and 2 lines below
" gcip    " Comment inner paragraph
" gcap    " Comment around paragraph (includes blank lines)
" gcG     " Comment from cursor to end of fileI
set commentary
" yae    " Yank entire file content
" dae    " Delete entire file content
" cae    " Change entire file (delete all and enter insert mode)
" =ae    " Indent entire file
" gqae   " Format entire file
" vae    " Visual select entire file
set textobj-entire
set which-key
set hlsearch
set foldmethod=indent
set foldlevelstart=99

" =============================================================================
" Plugin Configuration
" =============================================================================
" Enable IdeaVim plugins
Plug 'machakann/vim-highlightedyank'
Plug 'tpope/vim-commentary'
Plug 'preservim/nerdtree'
Plug 'tpope/vim-surround'
Plug 'terryma/vim-multiple-cursors'
Plug 'vim-scripts/ReplaceWithRegister'
"Plug 'justinmk/vim-sneak'

" Highlightedyank settings
let g:highlightedyank_highlight_duration = "5000"
let g:highlightedyank_highlight_color = "rgba(57, 62, 65, 255)"

" =============================================================================
" Basic Mappings
" =============================================================================
" Leader key configuration
let mapleader = " "
noremap <SPACE> <Nop>

" Essential navigation go to start or end and change auto to Insert Mode (remove i to remove auto insert)
"nnoremap L $i
"nnoremap H ^i
"vnoremap L $i
"vnoremap H ^i

" Quick escape mappings
imap jk <ESC>
imap kj <ESC>

" Add this to your .ideavimrc file
inoremap <expr> <Tab> search('\%#[]>)}''"`]', 'n') ? '<Right>' : '<Tab>'

"nnoremap <C-c> <Esc>
xnoremap <Esc> <Esc>
"xnoremap <C-c> <Esc>
vnoremap <Esc> <Esc>
"vnoremap <C-c> <Esc>

" Line operations
nmap zj o<ESC>k
nmap zk O<ESC>j

" Delete inner word and enter insert mode
nnoremap diw diwi


"nnoremap gl G$b

" =============================================================================
" Clipboard Operations
" =============================================================================
"vmap <leader>yiw "+yiw
"nmap <leader>yiw "+yiw
"vmap <leader>y "+y
"vmap <leader>d "_d
"nmap <leader>y "+yy
"nmap <leader>p "+p
"nmap <leader>P "+P
"vmap <leader>p "+p
"vmap <leader>P "+P
nnoremap yyc :action EditorDuplicate<CR>k:action CommentByLineComment<CR>j

" Show copy history
"nmap <leader>hc :action PasteMultiple<CR>

" =============================================================================
" Navigation & Search
" =============================================================================
" Scrolling
"nmap <leader>d <C-d>
"nmap <leader>u <C-u>
"vmap <leader>d <C-d>
"vmap <leader>u <C-u>
" Scroll down (half page) and center - using different key since D is for delete
nnoremap D <C-d>zz
nnoremap S <C-u>zz
vnoremap D <C-d>zz
vnoremap S <C-u>zz

nnoremap Q d$


"nnoremap <TAB> :action PreviousTab<CR>
"nnoremap <S-TAB> :action NextTab<CR>
"nnoremap <C-h> :action PreviousTab<CR>
"nnoremap <C-l> :action NextTab<CR>
nnoremap H :action PreviousTab<CR>
nnoremap L :action NextTab<CR>


" Window navigation
nnoremap <S-k> <C-w>k
nnoremap <S-j> <C-w>j



"fix
"nnoremap <leader>w :action JumpToLastWindow<CR>

"nmap <C-o> <Action>(Back)
"nmap <C-i> <Action>(Forward)
nmap <S-p> <Action>(Back)
nmap <S-n> <Action>(Forward)
" Window resizing shortcuts
" Ctrl-Shift-J to decrease window height
nmap <C-S-J> <Action>(StretchSplitToBottom)

" Ctrl-Shift-H to increase window height
nmap <C-S-K> <Action>(StretchSplitToTop)

" Method navigation
nnoremap ]] :action MethodDown<CR>
nnoremap [[ :action MethodUp<CR>

" Search functionality
"nmap <leader>fp :action FindInPath<CR>
"vmap <leader>fp :action FindInPath<CR>

" Find in project
nmap /fp :action FindInPath<CR>
vmap /fp :action FindInPath<CR>

map <leader>fe :action SearchEverywhere<CR>


vnoremap // :action Find<CR>
nnoremap // :action Find<CR>

" First hide all windows, then ensure editor focus
nnoremap EE :action ActivateProjectToolWindow<CR>
"find with /
nnoremap fs :action FileStructurePopup<CR>
nnoremap fr :action RecentFiles<CR>

nnoremap tt :action PinActiveTab<CR>

" nnoremap Fr :action SelectInProjectView<CR>



"" Find fuzzy
"map <Leader>gf <action>(com.mituuz.fuzzier.FuzzierVCS)
map ff <action>(com.mituuz.fuzzier.Fuzzier)
"map <Leader>mf <action>(com.mituuz.fuzzier.FuzzyMover)
map fvc <action>(com.mituuz.fuzzier.FuzzierVCS)
map <Leader>fg <action>(com.mituuz.fuzzier.FuzzyGrep)

" =============================================================================
" Code Navigation & Information
" =============================================================================
nnoremap gs :action GotoSuperMethod<CR>
nnoremap gi :action GotoImplementation<CR>
nnoremap [c :action JumpToLastChange<CR>
nnoremap ]c :action JumpToNextChange<CR>

nmap ]g <Action>(VcsShowNextChangeMarker)
nmap [g <Action>(VcsShowPrevChangeMarker)


nnoremap gd :action GotoDeclaration<CR>
nnoremap gc :action GotoClass<CR>
nmap <leader>gi :action GotoSymbol<CR>
" Use fz instead
" nnoremap <leader>gf :action GotoFile<CR>
nnoremap gt :action GotoTest<CR>
" Code information
nnoremap <leader>i :action ShowHoverInfo<CR>
nnoremap <leader>d :action ShowErrorDescription<CR>
nnoremap <leader>pi :action ParameterInfo<CR>
nmap qd <Action>(QuickJavaDoc)
nmap qi <Action>(QuickImplementations)
nnoremap U :action FindUsages<CR>

nnoremap <leader>iv :action IntroduceVariable<CR>
nnoremap <leader>em :action ExtractMethod<CR>
nnoremap <leader>ic :action IntroduceConstant<CR>

" Comments
nnoremap gcc :action CommentByLineComment<CR>
vnoremap gcc :action CommentByLineComment<CR>


" Comment paragraph
nnoremap gcap vap:action CommentByLineComment<CR>
nnoremap gcip vip:action CommentByLineComment<CR>

vnoremap gcC :action CommentByBlockComment<CR>
nnoremap gcC :action CommentByBlockComment<CR>


" Format function with Prettier
nnoremap cpf :action EditorCodeBlockStart<CR>V:action EditorCodeBlockEnd<CR>:action ReformatWithPrettierAction<CR>


" =============================================================================
" Window Management
" =============================================================================
map <leader>su <Action>(Unsplit)
map <leader>hsp <Action>(SplitHorizontally)
map <leader>vsp <Action>(SplitVertically)
nmap sm <Action>(MaximizeEditorInSplit)
nnoremap so :action MoveEditorToOppositeTabGroup<CR>
nnoremap <leader>sc :action UnsplitAll<CR>
"nnoremap <leader>v :action NextSplitter<CR>


nnoremap <leader>v :action NextWindow<CR>

"nnoremap  :action CloseContent<CR>
" Use 'x' to close the current window in normal and visual mode
"nnoremap X :action CloseContent<CR>
"vnoremap X :action CloseContent<CR>
"<C-S-o> same to laod vim changes
nnoremap <C-S-a> :action CloseAllEditors<CR>
" Close other tabs
"nnoremap <C-S-o> :tabonly<CR>


" Close other tabs
nnoremap <S-x> :tabonly<CR>


" =============================================================================
" Tool Windows & UI
" =============================================================================
" NERDTree
map <Esc> :NERDTreeClose<CR>
" Close NERDTree with Escape in normal and visual mode
"autocmd FileType nerdtree nnoremap <buffer> <Esc> :NERDTreeClose<CR>
"autocmd FileType nerdtree vnoremap <buffer> <Esc> :NERDTreeClose<CR>

" Terminal
nnoremap T :action ActivateTerminalToolWindow<CR>

" Display options
map <leader>dd <action>(ToggleDistractionFreeMode)
map <leader>dz <action>(ToggleZenMode)
map <leader>df <action>(ToggleFullScreen)
"nnoremap <leader>dw :action HideAllWindows<CR>

" =============================================================================
" Running & Debugging
" =============================================================================
nnoremap <leader>d :action Debug<CR>
nnoremap <leader>s :action Stop<CR>
nnoremap <leader>r :action Run<CR>
nnoremap <leader>R :action RunClass<CR>



" =============================================================================
" Debugging Step Actions
" =============================================================================
nnoremap N :action StepOver<CR>

" Resume program execution
nnoremap M :action Resume<CR>

" Step into
nnoremap \ :action StepInto<CR>

" Step out
" nnoremap \ :action StepOut<CR>

" Run to cursor
nnoremap <leader>dc :action Debugger.RunToCursor<CR>

" Force run to cursor
nnoremap <leader>df :action Debugger.ForceRunToCursor<CR>

" Resume program execution
nnoremap <leader>dr :action Resume<CR>

" Toggle breakpoint at the current line
nnoremap <leader>db :action ToggleLineBreakpoint<CR>

" Evaluate expression during debugging
nnoremap <leader>de :action EvaluateExpression<CR>

" View watches during debugging
nnoremap <leader>dw :action ViewWatches<CR>

" =============================================================================
" Project Management
" =============================================================================
" work fine with familly ide
nmap ]p :action NextProjectWindow<CR>
noremap [p :action PreviousProjectWindow<CR>

" =============================================================================
" Version Control
" =============================================================================
"nmap ]v <Action>(VcsShowNextChangeMarker)
"nmap [v <Action>(VcsShowPrevChangeMarker)

nnoremap <leader>vlc :action LocalHistory.ShowHistory<CR>
" View recent changes
nmap <leader>vc :action RecentChanges<CR>


" =============================================================================
" Error Navigation
" =============================================================================
"map <leader>en <Action>(ReSharperGotoNextErrorInSolution)
"map <leader>ep <Action>(ReSharperGotoPrevErrorInSolution)
nmap ]e <Action>(GotoNextError)
nmap [e <Action>(GotoPreviousError)


" =============================================================================
" Folding
" =============================================================================
nnoremap <leader>za za
nnoremap <leader>zo zo
map <leader>fa :action CollapseAllRegions<CR>
map <leader>fA :action ExpandAllRegions<CR>


" =============================================================================
" File Creation and Management
" =============================================================================
" Create new class
nnoremap <leader>nc :action NewClass<CR>

" Create new package
nnoremap <leader>np :action NewPackage<CR>

" File templates
nnoremap <leader>nt :action NewFromTemplate<CR>



"nnoremap <leader>fr :action RecentFiles<CR>

" =============================================================================
" Type Information
" =============================================================================
" Show type info for the expression under the cursor
nnoremap <leader>th :action ShowHoverInfo<CR>


" =============================================================================
" Call Hierarchy
" =============================================================================
" Show call hierarchy for the method under the cursor
nnoremap <leader>ch :action CallHierarchy<CR>

" =============================================================================
" Recent Locations
" =============================================================================
" Show recent locations popup
"nav
nnoremap <leader>rl :action RecentLocations<CR>

" IndentaciÃ³n
nnoremap <leader>i= :action ReformatCode<CR>
nnoremap <leader>io :action OptimizeImports<CR>
vnoremap <leader>i= :action ReformatCode<CR>

" formatting
"nnoremap cf :action ReformatCode <CR>
"vnoremap cf :action ReformatCode <CR>
nnoremap cr :action RenameElement <CR>
vnoremap cr :action RenameElement <CR>
nnoremap cR :action RenameFile <CR>
vnoremap cR :action RenameFile <CR>

" Refactoring
" map <leader>rn <Action>(RenameElement)
" map <leader>rm <Action>(ExtractMethod)
" map <leader>rv <Action>(IntroduceVariable)
" map <leader>rf <Action>(IntroduceField)
" map <leader>cs <Action>(ChangeSignature)
nnoremap cs :action ChangeSignature <CR>
vnoremap cs :action ChangeSignature <CR>
map <leader>qr <Action>(Refactorings.QuickListPopupAction)


" formatting
nnoremap cf :action ReformatCode <CR>
vnoremap cf :action ReformatCode <CR>
nnoremap cr :action RenameElement <CR>
vnoremap cr :action RenameElement <CR>
nnoremap cR :action RenameFile <CR>
vnoremap cR :action RenameFile <CR>

nnoremap cv :action IntroduceVariable <CR>
vnoremap cv :action IntroduceVariable <CR>
" Extract Method
nnoremap cm :action ExtractMethod<CR>
vnoremap cm :action ExtractMethod<CR>
nnoremap cs :action ChangeSignature <CR>
vnoremap cs :action ChangeSignature <CR>
nnoremap cR :action IntroduceField <CR>
vnoremap cR :action IntroduceField <CR>

nnoremap cm :action ExtractMethod <CR>
vnoremap cm :action ExtractMethod <CR>

" Refactoring
map <leader>qr <Action>(Refactorings.QuickListPopupAction)


" =============================================================================
" Bookmarks
" =============================================================================
" Toggle bookmark with mnemonic
nmap mm <Action>(ToggleBookmark)
" Toggle bookmark with numbering
nmap mq <Action>(ToggleBookmark1)
nmap mw <Action>(ToggleBookmark2)
nmap me <Action>(ToggleBookmark3)
nmap mr <Action>(ToggleBookmark4)
nmap mt <Action>(ToggleBookmark5)
nmap my <Action>(ToggleBookmark6)

nmap gmq <Action>(GotoBookmark1)
nmap gmw <Action>(GotoBookmark2)
nmap gme <Action>(GotoBookmark3)
nmap gmr <Action>(GotoBookmark4)
nmap gmt<Action>(GotoBookmark5)
nmap gmy <Action>(GotoBookmark6)
" Move Between Bookmarks (Global):
nmap ]b <Action>(GotoNextBookmark)
nmap [b <Action>(GotoPreviousBookmark)

" Show all bookmarks
"nmap <leader>sb :action ShowBookmarks<CR>
nmap Bs :action ShowBookmarks<CR>

"nnoremap <leader>ww :action HideAllWindows <CR>
nnoremap zz :action HideAllWindows <CR>
" Bonus: Toggle project view (useful companion mapping)
"nnoremap <silent> <leader>ew :action ActivateProjectToolWindow<CR>







" First hide all windows, then ensure editor focus
" nnoremap <leader>we :action HideAllWindows<CR>



" Use IDE handlers for common shortcuts
sethandler <C-X> a:ide
sethandler <C-C> a:ide
sethandler <C-V> a:ide
sethandler <C-A> a:ide
sethandler <C-/> a:ide
sethandler <C-S-x> a:vm

" new function

nnoremap su :action ShowUsages<CR>
nnoremap <leader>hi :action HighlightUsagesInFile<CR>



nnoremap <leader>gb :action Git.Branches<CR>


" Quick Actions
nnoremap <leader>qf :action QuickFix<CR>
nnoremap <leader>ai :action ShowIntentionActions<CR>
nnoremap ca :action ShowContextActions<CR>

" Diff shortcuts
nnoremap <leader>dd :action Diff.ShowDiff<CR>
nnoremap <leader>dh :action Compare.LastVersion<CR>
nnoremap <leader>dp :action Compare.Selected<CR>
nnoremap <leader>dt :action Vcs.ShowTabbedFileHistory<CR>

" Mover lÃ­neas
nnoremap <A-j> :action MoveLineDown<CR>
nnoremap <A-k> :action MoveLineUp<CR>
vnoremap <A-j> :action MoveLineDown<CR>
vnoremap <A-k> :action MoveLineUp<CR>

" EdiciÃ³n mÃºltiple
nnoremap <leader>mn :action SelectNextOccurrence<CR>
nnoremap <leader>mp :action UnselectPreviousOccurrence<CR>
nnoremap <leader>ma :action SelectAllOccurrences<CR>




nnoremap <C-w>t :action ActivateTerminalToolWindow<CR>
nnoremap <C-w>r :action ActivateRunToolWindow<CR>
nnoremap <C-w>d :action ActivateDebugToolWindow<CR>

" Enhanced marks


" Quick access to specific files
nnoremap <leader>fp :action ManageRecentProjects<CR>
